name: Fix OAuth and SSL Issues

on:
  workflow_dispatch:

jobs:
  fix-issues:
    runs-on: ubuntu-latest
    steps:
    - name: Fix OAuth and SSL via SSH
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H ${{ secrets.HOST }} >> ~/.ssh/known_hosts
        
        ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ${{ secrets.USERNAME }}@${{ secrets.HOST }} << 'EOF'
        echo "🔧 Fixing OAuth and SSL issues..."
        
        cd /root/supabase-nextjs-template
        
        # Stop all containers
        docker-compose down
        docker stop $(docker ps -q) 2>/dev/null || true
        
        echo "📋 Current environment check:"
        cat .env
        
        # Recreate .env with correct production URLs
        cat > .env << 'ENV_EOF'
        NEXT_PUBLIC_SUPABASE_URL=https://hcyteovnllklmvoptxjr.supabase.co
        NEXT_PUBLIC_SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImhjeXRlb3ZubGxrbG12b3B0eGpyIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDg1MDI5MTcsImV4cCI6MjA2NDA3ODkxN30.QEoxsRXBGSiZYFk7Y8f7fOinpL4ExkdbEGYtY_CQj0A
        NEXT_PUBLIC_SITE_URL=https://mynewagent.ai
        ENV_EOF
        
        # Create proper docker-compose.yml with environment variables and SSL
        cat > docker-compose.yml << 'DOCKER_EOF'
        version: '3.8'
        services:
          nextjs:
            build: ./nextjs
            environment:
              - NODE_ENV=production
              - NEXT_PUBLIC_SUPABASE_URL=https://hcyteovnllklmvoptxjr.supabase.co
              - NEXT_PUBLIC_SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImhjeXRlb3ZubGxrbG12b3B0eGpyIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDg1MDI5MTcsImV4cCI6MjA2NDA3ODkxN30.QEoxsRXBGSiZYFk7Y8f7fOinpL4ExkdbEGYtY_CQj0A
              - NEXT_PUBLIC_SITE_URL=https://mynewagent.ai
            ports:
              - "3000:3000"
            restart: unless-stopped
          
          nginx:
            image: nginx:alpine
            ports:
              - "80:80"
              - "443:443"
            volumes:
              - /etc/letsencrypt:/etc/letsencrypt:ro
              - ./nginx.conf:/etc/nginx/nginx.conf
            depends_on:
              - nextjs
            restart: unless-stopped
        DOCKER_EOF
        
        # Create nginx configuration with proper SSL and HTTP redirect
        cat > nginx.conf << 'NGINX_EOF'
        events {
            worker_connections 1024;
        }
        
        http {
            upstream nextjs {
                server nextjs:3000;
            }
            
            # HTTP server - redirect to HTTPS
            server {
                listen 80;
                server_name mynewagent.ai www.mynewagent.ai;
                return 301 https://$server_name$request_uri;
            }
            
            # HTTPS server
            server {
                listen 443 ssl;
                server_name mynewagent.ai www.mynewagent.ai;
                
                ssl_certificate /etc/letsencrypt/live/mynewagent.ai/fullchain.pem;
                ssl_certificate_key /etc/letsencrypt/live/mynewagent.ai/privkey.pem;
                
                location / {
                    proxy_pass http://nextjs;
                    proxy_set_header Host $host;
                    proxy_set_header X-Real-IP $remote_addr;
                    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                    proxy_set_header X-Forwarded-Proto $scheme;
                }
            }
        }
        NGINX_EOF
        
        echo "📋 Configuration files updated"
        echo "🚀 Starting services..."
        
        # Start services
        docker-compose up -d --build
        
        # Wait for services to start
        sleep 15
        
        echo "📊 Service status:"
        docker-compose ps
        
        echo "🔍 Testing HTTP (should redirect to HTTPS):"
        curl -I http://mynewagent.ai 2>/dev/null || echo "HTTP test failed"
        
        echo "🔒 Testing HTTPS:"
        curl -I https://mynewagent.ai 2>/dev/null || echo "HTTPS test failed"
        
        echo "🔧 Environment variables in container:"
        docker-compose exec nextjs env | grep NEXT_PUBLIC || echo "Could not check env vars"
        
        echo "✅ Fix completed!"
        EOF 